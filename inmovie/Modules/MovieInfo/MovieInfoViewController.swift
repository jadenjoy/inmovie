//
//  MovieInfoViewController.swift
//  inmovie
//
//  Created Константин on 04/12/2018.
//  Copyright © 2018 Константин. All rights reserved.
//
//  Template generated by Tundaikin Konstantin
//

import UIKit

class MovieInfoViewController: UITableViewController, MovieInfoViewProtocol {

    
    var presenter: MovieInfoPresenterProtocol!
    let configurator: MovieInfoConfiguratorProtocol = MovieInfoConfigurator()
    
    var movieInfo: MovieInfoModel?
    var id: Int = 0
    
    // MARK: - Lifecycle methods
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationController?.setNavigationBarHidden(false, animated: true)
        navigationController?.navigationBar.setBackgroundImage(UIImage(), for: .default)
        navigationController?.navigationBar.shadowImage = UIImage()
        navigationController?.navigationBar.isTranslucent = true
        navigationController?.view.backgroundColor = .clear
        
        tableView.contentInset = UIEdgeInsets(top: ((navigationController?.navigationBar.frame.size.height  ?? 0) * -1) - UIApplication.shared.statusBarFrame.height, left: 0, bottom: 0, right: 0)
        tableView.separatorStyle = .none
        tableView.allowsSelection = false
        tableView.register(MovieInfoTopCoverCell.self, forCellReuseIdentifier: "MovieTopCoverCellIdenttifier")
        tableView.register(MovieInfoShortInfoCell.self, forCellReuseIdentifier: "MovieShortInfoCelldenttifier")
        tableView.register(MovieInfoOverviewCell.self, forCellReuseIdentifier: "MovieOverviewCelldenttifier")

        configurator.configure(with: self)
        presenter.configureView()
    }
    
    
    
    
    
}

// Методы MovieInfoViewProtocol

extension MovieInfoViewController {
    
    // Обновление информации о фильме
    func updateView(info: MovieInfoModel) {

        self.movieInfo = info
        tableView.reloadData()
    }
}


// MARK: - UITableVieControlle методы

extension MovieInfoViewController {
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        
        guard let infoSections = movieInfo?.tableCells else {
            return 0
        }
        
        return infoSections.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let infoSections = movieInfo?.tableCells else {
            return UITableViewCell()
        }
        let model = infoSections[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: model.cellIdentifier, for: indexPath) as! MovieInfoBaseCell
        cell.model = model
        return cell
    }
}
